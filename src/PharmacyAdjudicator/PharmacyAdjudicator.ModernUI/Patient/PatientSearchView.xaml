<UserControl x:Class="PharmacyAdjudicator.ModernUI.Patient.PatientSearchView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:mui="http://firstfloorsoftware.com/ModernUI"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:pat="clr-namespace:PharmacyAdjudicator.ModernUI.Patient"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="600">
    <Grid Style="{StaticResource ContentRoot}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="600" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <ScrollViewer Grid.Row="0" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
            <!--Grid.ColumnSpan="2" Grid.Row="0">-->
            <StackPanel MinWidth="200">
                <TextBlock Text="SEARCH CRITERIA" Style="{StaticResource Heading2}" />
                <StackPanel x:Name="PatientSearchForm" Orientation="Vertical">
                    <StackPanel.Resources>
                        <Style TargetType="StackPanel">
                            <Setter Property="Orientation" Value="Horizontal" />
                            <Setter Property="Margin" Value="0,0,0,4" />
                        </Style>
                        <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
                            <Setter Property="Width" Value="100" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                        </Style>
                        <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
                            <Setter Property="Padding" Value="0,3" />
                        </Style>
                        <Style TargetType="RadioButton" BasedOn="{StaticResource {x:Type RadioButton}}">
                            <Setter Property="Padding" Value="0,3" />
                        </Style>
                    </StackPanel.Resources>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="300"/>
                            <ColumnDefinition Width="300"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                    <StackPanel Grid.Column="0">
                        <Label Content="First Name" Target="{Binding ElementName=FirstName}" />
                        <TextBox x:Name="PatientFirstName" Width="150" Text="{Binding Path=Model.PatientFirstName, Mode=TwoWay, ValidatesOnDataErrors=True}"/>
                    </StackPanel>
                    <StackPanel Grid.Column="0" Grid.Row="1">
                        <Label Content="Last Name" Target="{Binding ElementName=LastName}" />
                        <TextBox x:Name="PatientLastName" Width="150" Text="{Binding Path=Model.PatientLastName, Mode=TwoWay, ValidatesOnDataErrors=True}"/>
                    </StackPanel>
                    <StackPanel Grid.Column="1">
                        <Label Content="Cardholder ID" Target="{Binding ElementName=CardholderId}" />
                        <TextBox x:Name="CardholderId" Width="150" Text="{Binding Path=Model.CardholderId, Mode=TwoWay, ValidatesOnDataErrors=True}"/>
                    </StackPanel>
                    <StackPanel Grid.Column="1" Grid.Row="1">
                        <Label Content="Group ID" Target="{Binding ElementName=GroupId}" />
                        <TextBox x:Name="GroupId" Width="150" Text="{Binding Path=Model.GroupId, Mode=TwoWay, ValidatesOnDataErrors=True}"/>
                    </StackPanel>
                    <Button Grid.Column="1" Grid.Row="2" x:Name="Search" Content="Search" Margin="0,16,52,0" HorizontalAlignment="Right"/>
                    </Grid>
                </StackPanel>
            </StackPanel>
        </ScrollViewer>
        <StackPanel Grid.Column="0" Grid.Row="1" Orientation="Vertical" Visibility="{Binding CanShowResults, Converter={StaticResource BooleanToVisibilityConverter}}">
            <!--<pat:PatientSearchResultsView DataContext="{Binding Path=Results}"></pat:PatientSearchResultsView>--> 
            
            
            <!--<ListBox x:Name="Results" Margin="10" BorderThickness="3" ItemsSource="{Binding Path=Results}" SelectedItem="{Binding Path=SelectedItem, Mode=TwoWay}">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel>
                            <TextBlock Text="{Binding Path=FirstName}" />
                            <TextBlock Text="{Binding Path=LastName}" />
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>-->

            <TextBlock Text="SEARCH RESULTS" Style="{StaticResource Heading2}" />

            <DataGrid Name="PatientSearchDataGrid" ItemsSource="{Binding Path=Results}" SelectedItem="{Binding Path=SelectedPatient, Mode=TwoWay}" AutoGenerateColumns="False">
                <DataGrid.Columns>
                    <mui:DataGridTextColumn Header="First Name" Binding="{Binding FirstName}" IsReadOnly="True"/>
                    <mui:DataGridTextColumn Header="Last Name" Binding="{Binding LastName}" IsReadOnly="True"/>
                    <mui:DataGridTextColumn Header="Date of Birth" Binding="{Binding DateOfBirth, StringFormat=\{0:MM/dd/yyyy\}}" IsReadOnly="True"/>
                    <mui:DataGridTextColumn Header="Cardholder ID" Binding="{Binding CardholderId}" IsReadOnly="True"/>
                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Content ="Edit Patient" 
                                        cal:Message.Attach="ShowPatient($dataContext)"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>


            <!--Content loader works ok.  I want something more list like though where the edit screens are opened in a different window
            <Grid>
                <mui:ModernTab Layout="List" Links="{Binding Path=PatientListLinks}" ContentLoader="{Binding Path=PatientContentLoader}" />
            </Grid>-->
        </StackPanel>
        <StackPanel Grid.Row="2" Grid.ColumnSpan="2" >
            <ProgressBar Minimum="0" Maximum="1" Height="16" IsIndeterminate="True" Margin="0,0,0,16" Visibility="{Binding Path=IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        </StackPanel>
    </Grid>
</UserControl>
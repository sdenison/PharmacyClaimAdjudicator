<UserControl x:Class="PharmacyAdjudicator.ModernUI.Plan.PlanEditView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:mui="http://firstfloorsoftware.com/ModernUI"
             xmlns:library="clr-namespace:PharmacyAdjudicator.Library.Core.Rules;assembly=PharmacyAdjudicator.Library"
             xmlns:enums="clr-namespace:PharmacyAdjudicator.Library.Core.Enums;assembly=PharmacyAdjudicator.Library"
             xmlns:local="clr-namespace:PharmacyAdjudicator.ModernUI.Plan"
             xmlns:cal="http://www.caliburnproject.org"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="600">
    <UserControl.Resources>
        <!--<DataTemplate DataType="{x:Type sys:Boolean}">
            <CheckBox IsChecked="{Binding Mode=TwoWay}"/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type sys:String}">
            <TextBox Text="{Binding Mode=TwoWay}" />
        </DataTemplate>-->
        <DataTemplate x:Key="BooleanTemplate">
            <StackPanel Orientation="Horizontal">
                <Label Content="{Binding RuleType}" />
                <Label Content=" Has default value "/>
                <CheckBox IsChecked="{Binding DefaultValue, Mode=TwoWay}" Width="100" Height="22">
                    <CheckBox.Style>
                        <Style TargetType="{x:Type CheckBox}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <ComboBox>
                                            <ComboBoxItem x:Name="TrueComboBoxItem" Content="True" IsSelected="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=CheckBox}, UpdateSourceTrigger=PropertyChanged}" />
                                            <ComboBoxItem x:Name="FalseComboBoxItem" Content="False" IsSelected="{Binding IsChecked, Converter={StaticResource booleanInverter}, RelativeSource={RelativeSource AncestorType=CheckBox}}" />
                                        </ComboBox>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </CheckBox.Style>
                </CheckBox>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="StringTemplate">
            <StackPanel Orientation="Horizontal">
                <!--<Label Content="{Binding RuleType}" />
                <Label Content=" Has default value "/>-->
                <mui:BBCodeBlock>DEFAULT: </mui:BBCodeBlock>
                <TextBox Text="{Binding DefaultValue, Mode=TwoWay}"/>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="MoneyTemplate">
            <StackPanel Orientation="Horizontal">
                <!--<Label Content="{Binding RuleType}" />
                <Label Content=" Has default value $"/>-->
                <mui:BBCodeBlock>DEFAULT: $</mui:BBCodeBlock>
                <TextBox Text="{Binding DefaultValue, Mode=TwoWay}"/> <!--local:Masking.Mask="^(\d+)?+([\.]{1})?+([\d]{1,2})?$" />-->
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="AtomMoneyTemplate">
            <StackPanel Orientation="Horizontal">
                <!--<TextBox Text="{Binding Class, Mode=TwoWay}"/>
                <TextBlock Text="."/>
                <TextBox Text="{Binding Property, Mode=TwoWay}" />-->
                <mui:BBCodeBlock>: $</mui:BBCodeBlock>
                <TextBox Text="{Binding Value, Mode=TwoWay}"/>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="AtomNotSetTemplate">
        </DataTemplate>
        <DataTemplate x:Key="AtomStringTemplate">
            <StackPanel Orientation="Horizontal">
                <mui:BBCodeBlock>: </mui:BBCodeBlock>
                <TextBox Text="{Binding Value, Mode=TwoWay}"/>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="AtomBooleanTemplate">
            <StackPanel Orientation="Horizontal">
                <mui:BBCodeBlock>: </mui:BBCodeBlock>
                <CheckBox IsChecked="{Binding Value, Mode=TwoWay}" Width="100" Height="22">
                    <CheckBox.Style>
                        <Style TargetType="{x:Type CheckBox}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <ComboBox>
                                            <ComboBoxItem x:Name="TrueComboBoxItem" Content="True" IsSelected="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=CheckBox}, UpdateSourceTrigger=PropertyChanged}" />
                                            <ComboBoxItem x:Name="FalseComboBoxItem" Content="False" IsSelected="{Binding IsChecked, Converter={StaticResource booleanInverter}, RelativeSource={RelativeSource AncestorType=CheckBox}}" />
                                        </ComboBox>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </CheckBox.Style>
                </CheckBox>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="AtomEnumTemplate">
            <StackPanel Orientation="Horizontal">
                <mui:BBCodeBlock>:</mui:BBCodeBlock>
                <ComboBox SelectedValue="{Binding Value, Mode=TwoWay}" ItemsSource="{Binding ClrType, Converter={local:EnumToListConverter}}"/>
            </StackPanel>
        </DataTemplate>
        <ObjectDataProvider MethodName="GetValues"
                    ObjectType="{x:Type sys:Enum}"
                    x:Key="BasisOfReimbursementValues">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enums:BasisOfReimbursement" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <!--<DataTemplate x:Key="BasisOfReimbursementTemplate">
            <StackPanel Orientation="Horizontal">
                <Label Content="{Binding RuleType, Mode=TwoWay}" />
                <Label Content=" Has default value "/>
                <ComboBox SelectedItem="{Binding DefaultValue, Mode=TwoWay}" ItemsSource="{Binding Source={StaticResource BasisOfReimbursementValues}}" />
            </StackPanel>
        </DataTemplate>-->
        <DataTemplate x:Key="EnumTemplate">
            <StackPanel Orientation="Horizontal">
                <Label Content="{Binding RuleType, Mode=TwoWay}" />
                <Label Content=" Has default value "/>
                <ComboBox SelectedValue="{Binding DefaultValue, Mode=TwoWay}" ItemsSource="{Binding ClrType, Converter={local:EnumToListConverter}}"/>
                <!--<ComboBox ItemsSource="{Binding ClrType, Converter={local:EnumToListConverter}}"/>-->
            </StackPanel>
        </DataTemplate>
        <local:RuleDefaultTemplateSelector x:Key="RuleDefaultTemplateSelector" 
                                           BooleanTemplate="{StaticResource BooleanTemplate}"
                                           MoneyTemplate="{StaticResource MoneyTemplate}"
                                           EnumTemplate="{StaticResource EnumTemplate}"
                                           StringTemplate="{StaticResource StringTemplate}"/>

        <local:AtomDefaultTemplateSelector x:Key="atomDefaultTemplateSelector" 
                                           AtomBooleanTemplate="{StaticResource AtomBooleanTemplate}"
                                           AtomMoneyTemplate="{StaticResource AtomMoneyTemplate}"
                                           AtomEnumTemplate="{StaticResource AtomEnumTemplate}"
                                           AtomStringTemplate="{StaticResource AtomStringTemplate}"/>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="50*"/>
            <ColumnDefinition Width="1"/>
            <ColumnDefinition Width="50*"/>
        </Grid.ColumnDefinitions>
        <ScrollViewer Grid.Row="0">
            <StackPanel MinWidth="200">
                <StackPanel x:Name="PlanEditForm" Orientation="Vertical">
                    <StackPanel.Resources>
                        <Style TargetType="StackPanel">
                            <Setter Property="Orientation" Value="Horizontal" />
                            <Setter Property="Margin" Value="0,0,0,4" />
                        </Style>
                        <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
                            <Setter Property="Width" Value="120" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                        </Style>
                        <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
                            <Setter Property="Padding" Value="0,3" />
                        </Style>
                        <Style TargetType="RadioButton" BasedOn="{StaticResource {x:Type RadioButton}}">
                            <Setter Property="Padding" Value="0,3" />
                        </Style>
                    </StackPanel.Resources>
                    <StackPanel>
                        <Label Content="Plan ID" />
                        <TextBox x:Name="PlanId" Width="150" Text="{Binding Path=Model.PlanId, Mode=TwoWay, ValidatesOnDataErrors=True}" IsReadOnly="{Binding Path=IsReadOnly}"/>
                    </StackPanel>
                    <StackPanel>
                        <Label Content="Plan Name" />
                        <TextBox x:Name="Name" Width="150" Text="{Binding Path=Model.Name, Mode=TwoWay, ValidatesOnDataErrors=True}" IsReadOnly="{Binding Path=IsReadOnly}"/>
                    </StackPanel>
                    <!--<Model.AssignedRules></Model.AssignedRules>-->
                    
                    <ListBox x:Name="rules" ItemsSource="{Binding Path=Model.AssignedRules}" SelectedItem="{Binding Path=SelectedRule, Mode=TwoWay}" SelectionMode="Single" HorizontalContentAlignment="Stretch" ScrollViewer.VerticalScrollBarVisibility="Visible">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                <StackPanel.Resources>
                                    <!--<ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type SystemGesture:}">
                                            
                                    </ObjectDataProvider>-->
                                    <!--<DataTemplate DataType="{x:Type enums:BasisOfReimbursement}">
                                        <ComboBox ItemsSource="{Binding Source={StaticResource BasisOfReimbursementValues}}"/>
                                    </DataTemplate>-->
                                </StackPanel.Resources>
                                    <Label Content="{Binding RuleType}" />
                                    <!--<Label Content=" Has default value "/>
                                    <TextBox Text="{Binding DefaultValue}"/>-->
                                        
                            </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <ListBox x:Name="DynamicDefaultListBox" ItemTemplateSelector="{StaticResource RuleDefaultTemplateSelector}" ItemsSource="{Binding Path=Model.AssignedRules}"></ListBox>
                </StackPanel>
            </StackPanel>
        </ScrollViewer>
        <GridSplitter Grid.Column="1"/>
         
        <ScrollViewer Grid.Column="2">
            <StackPanel Orientation="Vertical" x:Name="ImplicationsStackPanel">
                <Label Content="{Binding Path=SelectedRule.RuleType}"></Label>
                <ContentControl x:Name="RuleDefaultContent" Content="{Binding Path=SelectedRule}" ContentTemplateSelector="{StaticResource RuleDefaultTemplateSelector}" Margin="5,0,0,0"/>
                <StackPanel HorizontalAlignment="Right">
                    <mui:ModernButton x:Name="AddImplication" HorizontalAlignment="Right" ToolTip="Add new implication" ToolTipService.ShowOnDisabled="true" EllipseDiameter="25" IconData="{StaticResource appbar_add}" Visibility="{Binding Path=CanEditObject, Converter={StaticResource BooleanToVisibilityConverter}}" FontSize="20" />
                </StackPanel>
                <ItemsControl ItemsSource="{Binding Path=SelectedRule.Implications}" Margin="5,0,0,0">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Vertical">
                                <DockPanel>
                                    <Label Content="Is " HorizontalAlignment="Left"></Label>
                                    <TextBox Text="{Binding Path=Head.Value}" HorizontalAlignment="Left"/>
                                    <mui:ModernButton x:Name="RemoveImplication" cal:Message.Attach="RemoveImplication($dataContext)" ToolTip="Remove implication" ToolTipService.ShowOnDisabled="True" HorizontalAlignment="Right" EllipseDiameter="25" IconData="{StaticResource appbar_delete}" Visibility="{Binding Path=CanEditObject, Converter={StaticResource BooleanToVisibilityConverter}}" FontSize="20" />
                                </DockPanel>
                                <Label Content="When"></Label>
                                <TreeView x:Name="AtomGroupTreeView" ItemsSource="{Binding Path=Body}" >
                                    <TreeView.Resources>
                                        <DataTemplate DataType="{x:Type library:Atom}">
                                            <StackPanel Orientation="Horizontal" MinWidth="300" Background="Transparent" 
                                                        Tag="{Binding DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}, AncestorLevel=2}}">
                                                <StackPanel.ContextMenu>
                                                    <ContextMenu cal:Action.TargetWithoutContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}"> <!-- cal:Action.TargetWithoutContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">-->
                                                        <MenuItem Header="Add Item..." cal:Message.Attach="AddAtom($dataContext)" />
                                                        <!--<MenuItem Header="Remove..." cal:Message.Attach="RemoveAtom($dataContext)"/>-->
                                                        <MenuItem Header="Remove..." cal:Message.Attach="RemoveAtom($dataContext)"/>
                                                    </ContextMenu>
                                                </StackPanel.ContextMenu>
                                                <ComboBox TextSearch.TextPath="" ItemsSource="{Binding Path=AllowedClasses}" SelectedItem="{Binding Path=Class}"/>
                                                <ComboBox TextSearch.TextPath="" ItemsSource="{Binding Path=AllowedProperties}" SelectedItem="{Binding Path=Property}"/>
                                                <ContentControl x:Name="ValueContentControl" Content="{Binding}" ContentTemplate="{StaticResource AtomNotSetTemplate}" />
                                            </StackPanel>
                                            <DataTemplate.Triggers>
                                                <DataTrigger Binding="{Binding ClrTypeString}" Value="NotSet">
                                                    <Setter TargetName="ValueContentControl" Property="ContentTemplate" Value="{StaticResource AtomNotSetTemplate}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ClrTypeString}" Value="String">
                                                    <Setter TargetName="ValueContentControl" Property="ContentTemplate" Value="{StaticResource AtomStringTemplate}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ClrTypeString}" Value="Decimal">
                                                    <Setter TargetName="ValueContentControl" Property="ContentTemplate" Value="{StaticResource AtomMoneyTemplate}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ClrTypeString}" Value="Boolean">
                                                    <Setter TargetName="ValueContentControl" Property="ContentTemplate" Value="{StaticResource AtomBooleanTemplate}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ClrTypeString}" Value="Enum">
                                                    <Setter TargetName="ValueContentControl" Property="ContentTemplate" Value="{StaticResource AtomEnumTemplate}"/>
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                        <HierarchicalDataTemplate
                                            DataType="{x:Type library:AtomGroup}" ItemsSource="{Binding Children}">
                                            <StackPanel Orientation="Horizontal" Tag="{Binding DataContext, ElementName=ImplicationsStackPanel}"> 
                                                <StackPanel.ContextMenu>
                                                    <ContextMenu cal:Action.TargetWithoutContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                                        <MenuItem Header="Add New List..." cal:Message.Attach="AddAtomGroup($dataContext)" />
                                                        <MenuItem Header="Add Item..." cal:Message.Attach="AddAtom($dataContext)" />
                                                        <MenuItem Header="Remove..."/>
                                                    </ContextMenu>
                                                </StackPanel.ContextMenu>
                                                <TextBlock Text="List type: ">
                                                </TextBlock>
                                                <TextBlock Text="{Binding LogicalOperator}"/>
                                            </StackPanel>
                                       </HierarchicalDataTemplate>
                                    </TreeView.Resources>
                                </TreeView>
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</UserControl>
